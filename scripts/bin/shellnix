#!/bin/sh
test ! -z "$1" || exit 1
cabal2nix --enable-profiling . > "./$1"
cat > default.nix << EOF
let pkgs = import <nixpkgs> {};
    profiled = pkgs.haskellPackages.override {
      overrides = self: super: {
        mkDerivation = args: super.mkDerivation (args // {
          enableLibraryProfiling = true;
        });
      };
    };
    drv = profiled.callPackage ./$1 { };
in if pkgs.lib.inNixShell then drv.env else drv
EOF
test -e shell.nix || ln -s default.nix shell.nix
